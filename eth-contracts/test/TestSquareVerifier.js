// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const SquareVerifier = artifacts.require("Verifier");
const Proof = require("./proof.json");

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps

// Test verification with incorrect proof
contract("Verifier", async (accounts) => {
  describe("match specs", function () {
    beforeEach(async function () {
      this.contract = await SquareVerifier.new();
    });

    it("should verify correctly with correct proof", async function () {
      const { proof, inputs } = Proof;
      const result = await this.contract.verifyTx.call(
        proof.a,
        proof.b,
        proof.c,
        inputs
      );
      assert.equal(result, true, "correct verification");
    });

    it("should verify incorrectly with incorrect proof", async function () {
      const { proof } = Proof;
      const result = await this.contract.verifyTx.call(
        proof.a,
        proof.b,
        proof.c,
        [4, 4]
      );
      assert.equal(result, false, "incorrect verification");
    });
  });
});
